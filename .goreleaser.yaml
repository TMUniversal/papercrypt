# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=jcroql

version: 2

env:
  - GO111MODULE=on

before:
  hooks:
    - go mod tidy
    - task completions
    - task manpages

report_sizes: true

release:
  github:
    owner: tmuniversal
    name: papercrypt
  draft: false
  # If set to auto, will mark the release as not ready for production
  # in case there is an indicator for this in the tag e.g. v1.0.0-rc1
  # If set to true, will mark the release as not ready for production.
  # Default is false.
  prerelease: auto

builds:
  - main: .
    binary: papercrypt
    env:
      - CGO_ENABLED=0
    goarch:
      - "386"
      - amd64
      - arm
      - arm64
      - ppc64
    goarm:
      - "7"
    goos:
      - linux
      - windows
      - darwin
    ignore:
      - goos: windows
        goarch: arm
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.FullCommit}} -X main.date={{ .CommitDate }} -X main.builtBy=goreleaser -X main.treeState={{ .IsGitDirty }}

universal_binaries:
  - replace: false

gomod:
  proxy: true

upx:
  - enabled: false # temporarily disabled
    compress: best
    lzma: true
    brute: false

archives:
  - formats: [ "tar.gz" ]
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        formats: [ "zip" ]
    files:
      - LICENSE
      - README.md
      - CHANGELOG.md
      - completions/*
      - manpages/*

checksum:
  name_template: "checksums.txt"

snapshot:
  version_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

signs:
  - cmd: cosign
    output: true
    stdin: "{{ .Env.COSIGN_PASSWORD }}"
    args:
      - "sign-blob"
      - "--key=cosign.key"
      - "--output-signature=${signature}"
      - "${artifact}"
      - "--yes"
    artifacts: checksum

docker_signs:
  - cmd: cosign
    artifacts: manifests
    output: true
    stdin: "{{ .Env.COSIGN_PASSWORD }}"
    args:
      - "sign"
      - "--key=cosign.key"
      - "${artifact}@${digest}"
      - "--yes"

homebrew_casks:
  - name: papercrypt
    # alternative_names:
    #   - papercrypt@{{ .Version }}
    #   - papercrypt@{{ .Major }}.{{ .Minor }}
    #   - papercrypt@{{ .Major }}
    skip_upload: auto
    repository:
      owner: tmuniversal
      name: homebrew-tap
      token: "{{ .Env.GORELEASER_TOKEN }}"
    commit_author: &commit_author
      name: TMUniversal
      email: 10200399+TMUniversal@users.noreply.github.com
    homepage: &homepage https://github.com/TMUniversal/papercrypt
    description: &description A tool to generate paper backups of your passwords and other secrets.
    license: &license AGPL-3.0-or-later
    caveats: |
      To get started, run:
        papercrypt help
    manpages:
      - manpages/papercrypt.1.gz
    completions:
      bash: "completions/papercrypt.bash"
      fish: "completions/papercrypt.fish"
      zsh: "completions/papercrypt.zsh"
    hooks:
      post:
        install: |
          if system_command("/usr/bin/xattr", args: ["-h"]).exit_status == 0
            system_command "/usr/bin/xattr", args: ["-dr", "com.apple.quarantine", "#{staged_path}/papercrypt"]
          end
          
          system_command "#{staged_path}/papercrypt", args: ["version"]

scoops:
  - name: papercrypt
    skip_upload: auto
    repository:
      owner: tmuniversal
      name: scoop-bucket
      token: "{{ .Env.GORELEASER_TOKEN }}"
    commit_author:
      <<: *commit_author
    homepage: *homepage
    description: *description
    license: *license
    shortcuts: [ [ "papercrypt.exe", "papercrypt" ] ]

# winget:
#   - name: papercrypt
#     publisher: TMUniversal
#     package_identifier: TMUniversal.PaperCrypt
#     publisher_url: https://github.com/TMUniversal
#     publisher_support_url: https://github.com/TMUniversal/papercrypt/issues
#     short_description: *description
#     license: *license
#     commit_author:
#       <<: *commit_author
#     homepage: *homepage
#     license_url: https://github.com/TMUniversal/papercrypt/blob/{{.Tag}}/LICENSE
#     copyright: Copyright Â© 2023-2024  TMUniversal <me@tmuniversal.eu>
#     copyright_url: https://github.com/TMUniversal/papercrypt/blob/{{.Tag}}/LICENSE
#     skip_upload: auto
#     release_notes_url: https://github.com/TMUniversal/papercrypt/blob/{{.Tag}}/CHANGELOG.md
#     tags:
#       - golang
#       - cli
#       - encryption
#       - backup
#     repository:
#       owner: tmuniversal
#       name: winget-pkgs
#       branch: "papercrypt-{{.Version}}"
#       token: "{{ .Env.GORELEASER_TOKEN }}"
#       pull_request:
#         enabled: true
#         draft: true
#         base:
#           owner: microsoft
#           name: winget-pkgs
#           branch: master

blobs:
  - provider: s3
    endpoint: "{{.Env.S3_ENDPOINT}}"
    region: "{{.Env.S3_REGION}}"
    bucket: "{{.Env.S3_BUCKET}}"
    directory: "papercrypt/{{.Version}}"

dockers:
  - image_templates:
      - ghcr.io/tmuniversal/papercrypt:{{ .Tag }}-amd64
    goarch: amd64
    use: buildx
    dockerfile: Dockerfile
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/amd64"
  - image_templates:
      - ghcr.io/tmuniversal/papercrypt:{{ .Tag }}-arm64
    goarch: arm64
    use: buildx
    dockerfile: Dockerfile
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/arm64"

docker_manifests:
  - id: papercrypt-latest
    name_template: ghcr.io/tmuniversal/papercrypt:latest
    image_templates:
      - ghcr.io/tmuniversal/papercrypt:{{ .Tag }}-amd64
      - ghcr.io/tmuniversal/papercrypt:{{ .Tag }}-arm64
    skip_push: auto
  - id: papercrypt-Tag
    name_template: ghcr.io/tmuniversal/papercrypt:{{ .Tag }}
    image_templates:
      - ghcr.io/tmuniversal/papercrypt:{{ .Tag }}-amd64
      - ghcr.io/tmuniversal/papercrypt:{{ .Tag }}-arm64

sboms:
  - artifacts: archive
